<?php
require_once '../service/movieService.php';

// JSON 한글 깨짐 방지
header('Content-Type: application/json');
header('Content-Type:text/html;charset=utf-8');

$sv = new MovieService();
$action = $_POST['action'];

// $action 인수에 따라 매핑 해주는 switch문
switch ($action) {
    
    // 영화 등록
    case 'insert' :
        // xss 공격 방지
        $movieTitle = htmlspecialchars($_POST['movieTitle']);
        $movieStory = htmlspecialchars($_POST['movieStory']);
        $openingDate = $_POST['openingDate'];
        $movieGenre = $_POST['movieGenre'];
        $movieDirector = htmlspecialchars($_POST['movieDirector']);
        
        // 사진 변수
        $uploaded_file_name_tmp = $_FILES['movieImage']['tmp_name'];
        $uploaded_file_name = $_FILES['movieImage']['name'];
        $upload_folder = $_SERVER['DOCUMENT_ROOT']."/image/";
        
        // 에러
        $error = $_FILES['movieImage']['error'];
        
        // 업로드 가능한 확장자
        $allowed_ext = array('jpg', 'jpeg', 'png');
        $ext = array_pop(explode('.', $uploaded_file_name));
        
        // 오류 확인
        if ($error != UPLOAD_ERR_OK){
            switch ($error){
                case UPLOAD_ERR_INI_SIZE:
                case UPLOAD_ERR_FORM_SIZE:
                    echo '파일이 너무 큽니다.($error)';
                    break;
                case UPLOAD_ERR_NO_FILE:
                    echo '파일이 첨부되지 않았습니다.($error)';
                    break;
                default:
                    echo '파일이 제대로 업로드되지 않았습니다.($error)';
            }
            exit;
        }
        
        if (!in_array($ext, $allowed_ext)) {
            echo '허용되지 않는 확장자입니다.';
            exit;
        }
        
        // 중복 방지용
        $uploaded_file_name = time().$uploaded_file_name;
        
        // 파일 이동
        move_uploaded_file($uploaded_file_name_tmp, $upload_folder.$uploaded_file_name);

        $movieImage = "image/".$uploaded_file_name;
        
        $sv->movieInsert($movieTitle, $movieStory, $movieImage, $openingDate, $movieDirector, $movieGenre);
        break;
    // 영화 수정
    case 'update' :
        $movieSeq = $_POST['movieSeq'];
        $movieTitle = $_POST['movieTitle'];
        $movieStory = $_POST['movieStory'];
        $openingDate = $_POST['openingDate'];
        $movieGenre = $_POST['movieGenre'];
        $movieDirector = $_POST['movieDirector'];
        
/*      $uploaded_file_name_tmp = $_FILES['movieImage']['tmp_name'];
        $uploaded_file_name = $_FILES['movieImage']['name'];
        $upload_folder = "image/";
        
        $movieImage = $upload_folder.$uploaded_file_name; */
        $sv->movieUpdate($movieSeq, $movieTitle, $movieStory, $openingDate, $movieDirector, $movieGenre);
        
        break;
    // 영화 상세정보
    case 'search' : 
        $movieSeq = $_POST['movieSeq'];
        $vo = $sv->movieSearch($movieSeq);
        $score = $sv->scoreSearch($movieSeq);
        $result = array();
        
        // VO클래스로 날아온 데이터 꺼내서 배열에 넣기
        array_push($result, array('movieTitle' => $vo->getMovieTitle(),
            'movieDirector' => $vo->getMovieDirector(),
            'movieStory' => $vo->getMovieStory(),
            'movieImage' => $vo->getMovieImage(),
            'openingDate' => $vo->getOpeningDate(),
            'movieSeq' => $vo->getMovieSeq(),
            'genreId' => $vo->getGenreId(),
            'score' => $score
            )
        );
        
        $arr['result'] = $result;
        
        // JSON 방식으로 인코딩해서 출력
        $json = json_encode($arr);
        echo $json;
        
        //case 'search' 종료
        break;
    
    // 영화 리스트
    case 'movieList' :
        $startPageNum = $_POST['startPageNum'];
        
        $voArray = $sv->movieList((int)$startPageNum);
        $movieCount = $sv->movieCount();
        $movie = array();
        $result = array();
        
        $movie['movieCount'] = $movieCount;
        
        foreach ($voArray as $arr) {
            array_push($result, array(
                'movieTitle' => $arr->getMovieTitle(),
                'movieDirector' => $arr->getMovieDirector(),
                'movieStory' => $arr->getMovieStory(),
                'movieImage' => $arr->getMovieImage(),
                'openingDate' => $arr->getOpeningDate(),
                'movieSeq' => $arr->getMovieSeq()
                ));
        }
        
        $movie['result'] = $result;
        
        
        // JSON 방식으로 인코딩해서 출력
        $json = json_encode($movie);
        echo $json;
        
        //case 'movieList' 종료
        break;
    
    // 영화 삭제
    case 'delete' :
        $movieSeq = $_POST['movieSeq'];
        $sv->movieDelete($movieSeq);
        
        // case 'delete' 종료
        break;
        
        
    // 장르 리스트
    case 'genreList' :
        $voArray = $sv->genreList();
        $genre = array();
        
        foreach ($voArray as $arr) {
            array_push($genre, array(
                'genreId' => $arr->getGenreId(),
                'genreName' => $arr->getGenreName()
                )
            );
        }
        
        // JSON 방식으로 인코딩해서 출력
        $json = json_encode($genre);
        echo $json;
        
        //case 'genreList' 종료
        break;
        
    // 평가 리스트
    case 'scoreList' :
        $movieSeq = $_POST['movieSeq'];
        $voArray = $sv->scoreList($movieSeq);
        
        $score = array();
        $result = array();
        
        foreach ($voArray as $arr) {
            array_push($result, array(
                'movieSeq' => $arr->getMovieSeq(),
                'scoreComment' => $arr->getScoreComment(),
                'scoreDate' => $arr->getScoreDate(),
                'score'=> $arr->getScore(),
                'userEmail' => $arr->getUserEmail(),
                'nickName' => $arr->getUserNickName()
                ));
        }
        
        $score['result'] = $result;
        
        $json = json_encode($score);
        echo $json;
        
        break;
        
     // 평가 삽입
    case 'scoreInsert' :
        session_start();
        
        $movieSeq = $_POST['movieSeq'];
        $movieScore = (int)$_POST['movieScore'];
        $scoreComment = $_POST['scoreComment'];
        $result = array();
        
        // 문자열이 입력되었는지 확인
        if (gettype($scoreComment) != string) {
            echo '문자가 아닌 값이 삽입되었습니다.';
            exit;
        }
        // 내용이 입력되었는지 확인
        if ($scoreComment == "" || $scoreComment == null) {
            echo '내용을 입력해 주세요.';
            exit;
        }
        // 내용이 450자 이상인지 확인
        if (strlen($scoreComment) >= 450) {
            echo '450자 이상은 입력할 수 없습니다.';
            exit;
        }
        // 점수가 1~5점 사이인지 확인
        else if((int)$movieScore < 1 || (int)$movieScore > 5) {
            echo '평점은 1점부터 5점까지만 등록 가능합니다.';
            exit;
        }
        
        $userEmail = $_SESSION['userEmail'];
        
        $scoreInsert = $sv->scoreInsert($movieSeq, $userEmail, $movieScore, $scoreComment);
        
        if ($scoreInsert == true) {
            $result['msg'] = '평가 삽입 성공';
            $result['status'] = '200';
            $result['desc'] = 'success';
        }
        else{
            $result['msg'] = '한 명당 한번만 평가할 수 있습니다.';
            $result['status'] = '401';
            $result['desc'] = 'error';
        }
        
        $json = json_encode($result);
        echo $result;
        break;
        
    default :
        echo '액션값 오류 : '.$action ;
}


// {"status":"200","desc":"success","result":{"0":861,"1":1841,"2":1304,"3":860}"}
/* 
'status' 
400 // 사용자 잘못된 요청
500, // 서버 내부 오류
200,
''

'result' : {list : 
*/
